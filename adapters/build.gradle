import static org.gradle.api.JavaVersion.*

apply plugin: 'java'
//apply plugin: 'cobertura'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'fatjar'

idea{
    module{
        name = "PriceAdapters"
    }
}


buildscript {
    dependencies {
        classpath fileTree(dir: 'lib',
            includes: [
                    'gradle-cobertura-plugin-1.0.jar',
                    'gradle-fatjar-plugin-0.2-rc1.jar'
            ]
            )
        }
}

dependencies {

    compile fileTree(dir: 'lib', include: '*.jar')
    testCompile fileTree(dir: 'lib', include: '*.jar')
    testRuntime fileTree(dir: 'lib', include: '*.jar')
}

mainClassName = "com.tesco.adapters.core.Controller"

fatJar {
    baseName = 'price-adapters'
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task zip(type: Zip) {
    baseName = 'price-adapters'
    from fatJar.outputs.files
    from('.') {
        include "*.properties"
        include "runImport"
    }
}

allprojects {
    def versionNumber = System.getenv("BUILD_NUMBER")
    if (versionNumber) {
        project.version = versionNumber
    } else {
        project.version = 'developer-build'
    }
}

// group is the groupId
group = 'com.tesco.adapters'
//the default artifactId is the project name, which is per default the directory name of the project

sourceCompatibility = VERSION_1_7
targetCompatibility = VERSION_1_7





// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
    main {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
    test {
        runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
    }
}

test {
    systemProperties 'logback.configurationFile': 'src/test/resources/logback.groovy'
    systemProperties 'environment': System.getProperty("environment")
    jvmArgs '-XX:-UseSplitVerifier'

    include 'com/tesco/**'

    ext.useDefaultListeners = true
    ext.workingDirectory = 'build/'
}

// see https://github.com/Mapvine/gradle-cobertura-plugin
//cobertura {
//    format = 'xml'
//    includes = ['**/*.java']
//}

run {
    systemProperties 'environment': System.getProperty("environment");
    systemProperties 'logback.configurationFile': 'src/main/resources/logback.groovy'
}

